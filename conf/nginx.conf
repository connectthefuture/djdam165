# Set another default user than root for security reasons
user www-data www-data;

# As a thumb rule: One per CPU. If you are serving a large amount
# of static files, which requires blocking disk reads, you may want
# to increase this from the number of cpu_cores available on your
# system.
#
# The maximum number of connections for Nginx is calculated by:
# max_clients = worker_processes * worker_connections
worker_processes 1;

# Maximum file descriptors that can be opened per process
# This should be > worker_connections
worker_rlimit_nofile 8192;

events {
  # When you need > 8000 * cpu_cores connections, you start optimizing
  # your OS, and this is probably the point at where you hire people
  # who are smarter than you, this is *a lot* of requests.
  worker_connections  8000;
}

# Change these paths to somewhere that suits you!
error_log  logs/error.log;
pid        logs/nginx.pid;

http {
  # Set the mime-types via the mime.types external file
  include       nginx-mime.types;

  # And the fallback mime-type
  default_type  application/octet-stream;

  # Format for our log files
  log_format   main '$remote_addr - $remote_user [$time_local]  $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

  # Click tracking!
  access_log   logs/access.log  main;

  # ~2 seconds is often enough for HTML/CSS, but connections in
  # Nginx are cheap, so generally it's safe to increase it
  keepalive_timeout 40;

  # You usually want to serve static files with Nginx
  sendfile on;

  tcp_nopush on; # off may be better for Comet/long-poll stuff
  tcp_nodelay off; # on may be better for Comet/long-poll stuff

  # Enable Gzip:
  gzip on;
  gzip_http_version 1.0;
  gzip_comp_level 5;
  gzip_min_length 512;
  gzip_buffers 4 8k;
  gzip_proxied any;
  gzip_types
    # text/html is always compressed by HttpGzipModule
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

  # This should be turned on if you are going to have pre-compressed copies (.gz) of
  # static files available. If not it should be left off as it will cause extra I/O
  # for the check. It would be better to enable this in a location {} block for
  # a specific directory:
  # gzip_static on;

  gzip_disable        "MSIE [1-6]\.";
  gzip_vary           on;

    ##### Gunicorn server 9000 #####
    # must go in main http block in nginx.conf
    upstream / {
      server         127.0.0.1:9000;
      # server unix:/home/johnb/virtualenvs/DJDAM/var/run/gunicorn.sock fail_timeout=0;
    }
    
    ##### Redirect Default Server 80 #####
    # Redirect all requests on the www subdomain to the root domain
    # server {
    #  listen      80;
    #  server_name prodimages.ny.bluefly.com;
    #  rewrite ^/(.*) http://djdam/$1 permanent;
    # }
    
    
    ##### Default Server 80 #####
    # Serve static files and redirect any other request to Gunicorn
    server {
        listen       80;
        server_name  prodimages.ny.bluefly.com;
        # server_name zero07.relic7.org;
        
        # no security problem here, since / is alway passed to upstream
        root /home/johnb/virtualenvs/DJDAM/src/djdam/;
        #root        /home/johnb/virtualenvs/DJDAM/src/djdam/var/;
        
        access_log  /var/log/nginx/djdam.access.log;
        error_log  /var/log/nginx/djdam.error.log;
        client_max_body_size 4G;
        
        
        ### STATIC_ROOT
        location ~* /static/ {
              #root /var/www/srv/;
              root  /home/johnb/virtualenvs/DJDAM/src/var/;
        }
        
        # # serve directly - analogous for static/staticfiles
        # location /media/ {
        #     # if asset versioning is used
        #     if ($query_string) {
        #         expires max;
        #     }
        # }
        
        ## MEDIA_ROOT -- UPLOADS
        location ~* /media/(uploads)/(colorstyle|file_name)/(alt)/(.*) {

        location ~* /media/(uploads)/(images|albums|docs)/(.*) {
               root  /home/johnb/virtualenvs/DJDAM/src/djdam/var/$1/$2/$3/$4;
               #root /var/www/srv/media/$1/$2/$3;
        }
        
        location ~* /studio_thumbs/(.*)/(.*)$ {
        #       alias /var/www/srv/media/$1/$2;
               alias /mnt/Production_Raw/.zImages_1/$1/$2;
        }


        # location ~* ^/studio_thumbs/(\d+)/(.*)$ {
        #      alias /mnt/Production_Raw/.zImages_1/$1/$2;
        # }
        
        
        
        ### file6
        #location ~* /studio_thumbs/ {
        #        alias /mnt/Production_Raw/.zImages_1/;
        #        #autoindex on; 
        #        #autoindex_exact_size off;
        #}
        
        #location ~* /studio_raw/ {
        #       alias /mnt/Production_Raw/.zImages_1/;
        #       }
        
        # ### file7
        location ~* /zImages/(.*)/(.*)$ {
              alias /mnt/Post_Ready/zImages_1/$1/$2;

        }
        
        location ~* /Retouch_Still/(.*)/(.*)/(.*)$ {
              alias /mnt/Post_Ready/Retouch_Still/$1/$2/$3;
        }
        
        location ~* /Retouch_Fashion/(.*)/(.*) {
              alias /mnt/Post_Ready/Retouch_Fashion/$1/$2;
        }
        
        
        location /admin/media/ {
        #     # this changes depending on your python version
            root /home/johnb/virtualenvs/DJDAM/lib/python2.7/site-packages/django/contrib;
        }
    
        # Error pages
        # error_page 500 502 503 504 /500.html;
        
        # Deny illegal host headers. ie. not server by servers host
        # if ($host !~* ^(djdam|djdam.org|www.djdam.org)$ {
        #     return 444;
        # }
        
        # Check if a file exists at /var/www/domain/ for the incoming request.
        # If it doesn't proxy to Gunicorn/Django.
        # try_files $uri @django;
        
        # Setup named location for Django requests and handle proxy details
        # location @django {
        location / {
          # proxy_pass         http://django;
          proxy_redirect     off;
          proxy_set_header   Host             $host;
          proxy_set_header   X-Real-IP        $remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
          proxy_pass         http://127.0.0.1:9000/;
          # proxy_pass_header Server;
          # proxy_set_header  Host $http_host;
          # proxy_set_header  X-Real-IP $remote_addr;
          proxy_set_header   X-Scheme $scheme;
          proxy_connect_timeout 75;
          proxy_read_timeout    75;
          }
    }
}

